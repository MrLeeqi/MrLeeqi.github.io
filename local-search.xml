<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Git笔记</title>
    <link href="/2021/04/15/Git%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/04/15/Git%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h3 id="1-Git-fork后如何同步源仓库更新"><a href="#1-Git-fork后如何同步源仓库更新" class="headerlink" title="1.Git fork后如何同步源仓库更新"></a>1.Git fork后如何同步源仓库更新</h3><ol><li><p>设置源仓库的远程地址</p><blockquote><p>git remote add [新地址名称] [源仓库远程地址]<br>git remote add zhanghao ssh://git@10.248.51.250:20022/F1639225/itms2020.git</p></blockquote></li><li><p>同步fork</p><blockquote><p>git fetch [新地址名称]<br>git fetch zhanghao</p></blockquote></li><li><p>本地切换到想要更新的分支上</p><blockquote><p>git checkout [branch]<br>git checkout feature-pnms</p></blockquote></li><li><p>把源仓库的远程分支合并到本地</p><blockquote><p>git merge [新地址名称/分支]<br>git merge zhanghao/feature-pnms</p></blockquote></li><li><p>更新到自己的远程库上</p><blockquote><p>git push origin feature-pnms  </p></blockquote><h3 id="2-拉取源仓库的指定分支到本地仓库"><a href="#2-拉取源仓库的指定分支到本地仓库" class="headerlink" title="2.拉取源仓库的指定分支到本地仓库"></a>2.拉取源仓库的指定分支到本地仓库</h3><blockquote><p>git checkout -b hotfeature-prm-trackmailtouser zhanghao/hotfeature-prm-trackmailtouser</p></blockquote></li></ol>]]></content>
    
    
    <categories>
      
      <category>git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git remote</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows笔记</title>
    <link href="/2021/04/15/windows%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/04/15/windows%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="1-使程式能在-win-R-中启动"><a href="#1-使程式能在-win-R-中启动" class="headerlink" title="1.使程式能在 win+R 中启动"></a>1.使程式能在 <code>win+R</code> 中启动</h3><p>把XXX.exe存放的目录添加到系统环境变量；加完之后,Win+R一下输入 XXX ,即可打开。  </p><p><img src="/img/content_images/20191226102144689_6468.png"></p><h3 id="2-添加程式到鼠标右键菜单"><a href="#2-添加程式到鼠标右键菜单" class="headerlink" title="2.添加程式到鼠标右键菜单"></a>2.添加程式到鼠标<strong>右键菜单</strong></h3><p>在某个文件夹中打开终端, 这个是一个(超级)痛点需求, 实际上上一步的把 XXX 加到环境变量就是为此服务的, 在管理员权限的终端( <code>win+R</code> )输入以下语句即可:  </p><pre><code>XXX.exe /REGISTER ALL</code></pre>]]></content>
    
    
    <categories>
      
      <category>Windows上的技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>鼠标右键</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python笔记</title>
    <link href="/2021/04/15/Python%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/04/15/Python%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="PYTHON"><a href="#PYTHON" class="headerlink" title="PYTHON"></a>PYTHON</h2><h3 id="1-Python中，使用-列表生成式-找出两个列表中不同的元素："><a href="#1-Python中，使用-列表生成式-找出两个列表中不同的元素：" class="headerlink" title="1.Python中，使用 列表生成式 找出两个列表中不同的元素："></a>1.Python中，使用 <strong>列表生成式</strong> 找出两个列表中不同的元素：</h3><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs perl">a = [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>]  <br>b = [<span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>]  <br><span class="hljs-keyword">print</span>([i <span class="hljs-keyword">for</span> i in a <span class="hljs-keyword">if</span> i <span class="hljs-keyword">not</span> in b] + [i <span class="hljs-keyword">for</span> i in b <span class="hljs-keyword">if</span> i <span class="hljs-keyword">not</span> in a])  <br>[<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">2</span>]  <br><br>变量倒序：  <br><span class="hljs-keyword">print</span>(a[::-<span class="hljs-number">1</span>])        <span class="hljs-comment"># 输出：[8, 5, 4, 3, 1]  此法不会改变变量本身（a还是之前的a）</span><br><span class="hljs-keyword">print</span>(a.<span class="hljs-keyword">reverse</span>())    <span class="hljs-comment"># 输出：[8, 5, 4, 3, 1]  此法改变了变量本身（a已不再是之前的a）</span><br></code></pre></td></tr></table></figure><h3 id="2-用Python搭建一个临时的HTTP站点-可通过该站点共享目录文件等等"><a href="#2-用Python搭建一个临时的HTTP站点-可通过该站点共享目录文件等等" class="headerlink" title="2.用Python搭建一个临时的HTTP站点(可通过该站点共享目录文件等等)"></a>2.用Python搭建一个临时的HTTP站点(可通过该站点<strong>共享目录文件</strong>等等)</h3><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mel"><span class="hljs-number">1</span>）进入待分享的目录 <br><span class="hljs-number">2</span>）执行命令<span class="hljs-keyword">python</span> -m SimpleHTTPServer 端口号 <br>　 注意：不填端口号则默认使用<span class="hljs-number">8000</span>端口。 <br><span class="hljs-number">3</span>）浏览器访问该主机的地址：http:<span class="hljs-comment">//IP:端口号/</span><br><span class="hljs-keyword">python</span> <span class="hljs-number">2</span>版本  <br><span class="hljs-keyword">python</span> -m SimpleHTTPServer <span class="hljs-number">8080</span>  <br><span class="hljs-keyword">python</span> <span class="hljs-number">3</span>版本  <br><span class="hljs-keyword">python</span> -m http.server <span class="hljs-number">8080</span><br></code></pre></td></tr></table></figure><h3 id="3-virtualenv：创建python虚拟环境时，用”virtualenv-–no-site-packages-venv”命令，提示：virtualenv-error-unrecognized-arguments-–no-site-packages！！！（python3-8-1-64-bit、virtualenv20-0-4）"><a href="#3-virtualenv：创建python虚拟环境时，用”virtualenv-–no-site-packages-venv”命令，提示：virtualenv-error-unrecognized-arguments-–no-site-packages！！！（python3-8-1-64-bit、virtualenv20-0-4）" class="headerlink" title="3.virtualenv：创建python虚拟环境时，用”virtualenv –no-site-packages venv”命令，提示：virtualenv: error: unrecognized arguments: –no-site-packages！！！（python3.8.1 64-bit、virtualenv20.0.4）"></a>3.virtualenv：创建python虚拟环境时，用”virtualenv –no-site-packages venv”命令，提示：virtualenv: error: unrecognized arguments: –no-site-packages！！！（python3.8.1 64-bit、virtualenv20.0.4）</h3><p><strong>解决办法</strong>：降低 virtualenv 版本（我降到了16.7.7）<br>报错截图：<br><img src="/img/content_images/20200221102823194_1685.png" alt="错误截图">  </p><h3 id="4-VS-Code安装完成后，打开出现黑屏，或者运行python文件时出现不能运行，亦或者vscode用不了cmd（总是运行超时）"><a href="#4-VS-Code安装完成后，打开出现黑屏，或者运行python文件时出现不能运行，亦或者vscode用不了cmd（总是运行超时）" class="headerlink" title="4.VS Code安装完成后，打开出现黑屏，或者运行python文件时出现不能运行，亦或者vscode用不了cmd（总是运行超时）"></a>4.VS Code安装完成后，打开出现黑屏，或者运行python文件时出现不能运行，亦或者vscode用不了cmd（总是运行超时）</h3><p><strong>解决办法</strong>：修改软件兼容性并改为以管理员身份运行，如下：<br><img src="/img/content_images/20200221103956354_16976.png">  </p><h3 id="5-运行ipython出现以下问题（ipython-7-13-0，prompt-toolkit-3-0-3）："><a href="#5-运行ipython出现以下问题（ipython-7-13-0，prompt-toolkit-3-0-3）：" class="headerlink" title="5.运行ipython出现以下问题（ipython 7.13.0，prompt-toolkit 3.0.3）："></a>5.运行ipython出现以下问题（ipython 7.13.0，prompt-toolkit 3.0.3）：</h3><p>  <img src="/img/content_images/20200229101501663_15501.png"><br>  <strong>原因及解决办法</strong>：ipython 7 . 10 . 2（或ipython 7.13.0）和prompt toolkit v3.x之间存在一些不兼容之处。但是，当降级到prompt toolkit v2.x时，一切正常。github的ipython员工建议我这样做(这是他们的功劳)。  </p><h3 id="6-批量安装Python的第三方库："><a href="#6-批量安装Python的第三方库：" class="headerlink" title="6.批量安装Python的第三方库："></a>6.批量安装Python的第三方库：</h3><p>  <img src="/img/content_images/20200413141854674_2436.png">  </p><pre><code>1.将要安装的第三方库按照以上格式写入.txt文件中2.命令行输入：pip install -r requirements.txt  </code></pre><h3 id="7-使用pip-install-r-requirements-txt时有时候会提示代理问题"><a href="#7-使用pip-install-r-requirements-txt时有时候会提示代理问题" class="headerlink" title="7.使用pip install -r requirements.txt时有时候会提示代理问题"></a>7.使用<code>pip install -r requirements.txt</code>时有时候会提示代理问题</h3><p><img src="/img/content_images/20210415101046404_11949.png"></p><p>原因是升级了<code>pip</code>；当然，这是少数情况。<strong>解决办法是退回pip低版本下安装（pip==19.2.3）</strong>：  </p><p><img src="/img/content_images/20210415101147175_29259.png"></p><h3 id="8-使用pyinstaller打包方法"><a href="#8-使用pyinstaller打包方法" class="headerlink" title="8.使用pyinstaller打包方法"></a>8.使用pyinstaller打包方法</h3><p>第一种：把由.py文件打包而成的.exe文件及相关文件放在一个目录中。</p><blockquote><p>语法：pyinstaller 应用程序<br>eg：pyinstaller Hello.py  </p></blockquote><p>第二种：加上 -F 参数后把制作出的.exe打包成一个独立的.exe格式的可执行文件。</p><blockquote><p>语法：pyinstaller -F 应用程序<br>eg：pyinstaller -F Hello.py </p></blockquote><p>如果你的脚本文件中包含其他脚本，比如hello.py包含自定义脚本(world.py)或是系统脚本(sys.py)：则需要在打包的时候加上其他脚本的路径。<br><code>通过-p指定第三方包的路径，一条路径对应一个-p</code>  </p><blockquote><p>eg：pyinstaller -F -p C:\SystemLib\site-packages -p C:\MyLib Hello.py</p></blockquote><p>执行一次打包命令通常会生成两个目录一个附件，分别是build、dist、和xx.spec。<br>build：是编译过程中的中间产物，<br>dist：是最终可执行程序目录，<br>spec：spec文件是类似缓存，如果你第二次打包，则需要先把spec删掉，否则第二次打包会受影响。    </p><p><strong>pyinstaller参数介绍</strong>    </p><p>常用的主要是-F、-p、-i、-w这几个参数。</p><p>-a：不包含编码.在支持Unicode的python版本上默认包含所有的编码<br>-c：使用控制台子系统执行(默认)(只对Windows有效)<br>-d：产生debug版本的可执行文件<br>-i ：指定打包程序使用的图标（icon）文件<br>-F：打包成可执行程序<br>-h：查看帮助<br>-p：添加使用的第三方库路径<br>-v：查看 PyInstaller 版本<br>-w：取消控制台显示（默认是显示控制台的）  </p><p><strong>举个栗子：</strong>  </p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">pyinstaller -F -<span class="hljs-selector-tag">p</span> C:\SystemLib\site-packages -<span class="hljs-selector-tag">p</span> C:\MyLib <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.py</span> -<span class="hljs-selector-tag">i</span> C:\image\excel.ico<br>解释：<br>打包 <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.py</span> 脚本<br><span class="hljs-selector-tag">main</span>.py包含第三方脚本，一个是系统脚本，一个是自定义脚本<br>设置可执行程序的图标为excel.ico<br></code></pre></td></tr></table></figure><h3 id="9-django项目中出现：in-a-frame-because-it-set-‘X-Frame-Options’-to-‘deny’"><a href="#9-django项目中出现：in-a-frame-because-it-set-‘X-Frame-Options’-to-‘deny’" class="headerlink" title="9. django项目中出现：in a frame because it set ‘X-Frame-Options’ to ‘deny’."></a>9. django项目中出现：in a frame because it set ‘X-Frame-Options’ to ‘deny’.</h3><p>解决办法参考： <a href="https://www.whbwiki.com/318.html">Django</a></p><h3 id="10-pip仓库源"><a href="#10-pip仓库源" class="headerlink" title="10. pip仓库源"></a>10. pip仓库源</h3><p>方法一（首选）：在<code>C:\Users\Administrator\pip</code>中新建文件<code>pip.ini</code>，配置以下内容</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[<span class="hljs-keyword">global</span>]<br><span class="hljs-keyword">index</span>-url = https://pypi.tuna.tsinghua.edu.cn/simple<br>[install]<br><span class="hljs-keyword">trusted</span>-host=mirrors.aliyun.com<br></code></pre></td></tr></table></figure><p>方法二：<code>pip install pypinyin -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com</code></p>]]></content>
    
    
    <categories>
      
      <category>Python里面的坑</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python文件打包</tag>
      
      <tag>虚拟环境问题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS笔记</title>
    <link href="/2021/04/15/JS%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/04/15/JS%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><h3 id="1-在应用中添加-当前时间-方法"><a href="#1-在应用中添加-当前时间-方法" class="headerlink" title="1.在应用中添加 当前时间 方法"></a>1.在应用中添加 <strong>当前时间</strong> 方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">runClock</span>(<span class="hljs-params"></span>)</span>&#123;<br>theTime = <span class="hljs-built_in">window</span>.setTimeout(<span class="hljs-string">&quot;runClock()&quot;</span>, <span class="hljs-number">50</span>);<br><span class="hljs-keyword">var</span> now= <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();<br><span class="hljs-keyword">var</span> dateValue= now.toLocaleDateString();<br><span class="hljs-keyword">var</span> timeValue= now.toLocaleTimeString();<br><span class="hljs-keyword">var</span> datetimeValue= <span class="hljs-string">&#x27;當前時間：&#x27;</span> + dateValue + <span class="hljs-string">&#x27; &#x27;</span> + timeValue;<br><span class="hljs-built_in">document</span>.all.nowtime.innerHTML = datetimeValue;<br>&#125;<br></code></pre></td></tr></table></figure><p>  调用方法：  </p><p>  <img src="/img/content_images/20190807140611686_718.png" alt="调用方法">  </p><h3 id="2-时间倒计时功能："><a href="#2-时间倒计时功能：" class="headerlink" title="2.时间倒计时功能："></a>2.时间倒计时功能：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs xml">HTML代码：<br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;CountMsg&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;HotDate&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;t_d&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;t_h&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;t_m&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;t_s&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>js代码：<br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">        <span class="hljs-comment">//高考倒计时</span></span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getRTime</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">            <span class="hljs-keyword">var</span> EndTime = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-string">&quot;2019/12/21 23:55:00&quot;</span>); <span class="hljs-comment">//截止时间</span></span><br><span class="javascript">            <span class="hljs-keyword">var</span> NowTime = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();</span><br><span class="javascript">            <span class="hljs-keyword">var</span> t = EndTime.getTime() - NowTime.getTime();</span><br><span class="javascript">            <span class="hljs-keyword">var</span> d = <span class="hljs-built_in">Math</span>.floor(t / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> / <span class="hljs-number">24</span>);</span><br><span class="javascript">            <span class="hljs-keyword">var</span> h = <span class="hljs-built_in">Math</span>.floor(t / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> % <span class="hljs-number">24</span>);</span><br><span class="javascript">            <span class="hljs-keyword">var</span> m = <span class="hljs-built_in">Math</span>.floor(t / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> % <span class="hljs-number">60</span>);</span><br><span class="javascript">            <span class="hljs-keyword">var</span> s = <span class="hljs-built_in">Math</span>.floor(t / <span class="hljs-number">1000</span> % <span class="hljs-number">60</span>);</span><br><br><span class="javascript">            <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;t_d&quot;</span>).innerHTML = d + <span class="hljs-string">&quot; 天&quot;</span>;</span><br><span class="javascript">            <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;t_h&quot;</span>).innerHTML = h + <span class="hljs-string">&quot; 时&quot;</span>;</span><br><span class="javascript">            <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;t_m&quot;</span>).innerHTML = m + <span class="hljs-string">&quot; 分&quot;</span>;</span><br><span class="javascript">            <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;t_s&quot;</span>).innerHTML = s + <span class="hljs-string">&quot; 秒&quot;</span>;</span><br>        &#125;<br><span class="javascript">        <span class="hljs-built_in">setInterval</span>(getRTime, <span class="hljs-number">1000</span>);</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3-数字计时功能："><a href="#3-数字计时功能：" class="headerlink" title="3.数字计时功能："></a>3.数字计时功能：</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">HTML代码：  <br>&lt;input <span class="hljs-keyword">type</span>=<span class="hljs-string">&quot;text&quot;</span> id=<span class="hljs-string">&quot;txt&quot;</span> disabled&gt;  <br><br>js代码：  <br>var c=<span class="hljs-number">0</span><br>var t<br><span class="hljs-keyword">function</span> timed<span class="hljs-constructor">Count()</span>&#123;<br>    document.get<span class="hljs-constructor">ElementById(&#x27;<span class="hljs-params">txt</span>&#x27;)</span>.value=c<br>    c=c+<span class="hljs-number">1</span><br>    t=set<span class="hljs-constructor">Timeout(<span class="hljs-string">&quot;timedCount()&quot;</span>,1000)</span><br>    <span class="hljs-keyword">if</span>(c<span class="hljs-operator"> == </span><span class="hljs-number">11</span>) &#123;    <span class="hljs-comment">//当数字到 10 时，计时终止</span><br>        stop<span class="hljs-constructor">Count()</span><br>    &#125;<br>&#125;<br><span class="hljs-keyword">function</span> stop<span class="hljs-constructor">Count()</span>&#123;    <span class="hljs-comment">//计时终止器</span><br>    clear<span class="hljs-constructor">Timeout(<span class="hljs-params">t</span>)</span><br>&#125;<br>timed<span class="hljs-constructor">Count()</span><br></code></pre></td></tr></table></figure><h3 id="4-遇到一行字数太多显示不完，可以使用以下方法："><a href="#4-遇到一行字数太多显示不完，可以使用以下方法：" class="headerlink" title="4.遇到一行字数太多显示不完，可以使用以下方法："></a>4.遇到一行字数太多显示不完，可以使用以下方法：</h3><p>以span标签为例：<br>style样式：  </p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-tag">span</span>&#123;<br>    <span class="hljs-attribute">word-break</span>:normal;<br>    <span class="hljs-attribute">width</span>:auto; <br>    <span class="hljs-attribute">display</span>:block;<br>    <span class="hljs-attribute">white-space</span>:pre-wrap;<br>    <span class="hljs-attribute">word-wrap</span> : break-word ;<br>    <span class="hljs-attribute">overflow</span>: hidden ;<br>&#125;<br><br><span class="hljs-selector-attr">[参考链接]</span>(https://blog.csdn.net/qingyun0719/article/details/<span class="hljs-number">5629981</span>)  <br><br><span class="hljs-selector-class">.ui-jqgrid</span> <span class="hljs-selector-tag">tr</span><span class="hljs-selector-class">.jqgrow</span> <span class="hljs-selector-tag">td</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">6</span>) &#123;<br>   <span class="hljs-attribute">white-space</span>: normal <span class="hljs-meta">!important</span>;<br>   <span class="hljs-attribute">word-break</span>:break-all;<br>&#125;<br><br><span class="hljs-selector-attr">[参考链接]</span>(https://blog.csdn.net/zhengxiangwen/article/details/<span class="hljs-number">9120215</span>)  <br></code></pre></td></tr></table></figure><h3 id="5-js动态获取浏览器或页面等容器的宽高的方法大体有哪些："><a href="#5-js动态获取浏览器或页面等容器的宽高的方法大体有哪些：" class="headerlink" title="5.js动态获取浏览器或页面等容器的宽高的方法大体有哪些："></a>5.js动态获取浏览器或页面等容器的宽高的方法大体有哪些：</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs stylus">除去浏览器边框，标签栏等的宽度：document<span class="hljs-selector-class">.documentElement</span>.clientWidth<br>除去浏览器边框，标签栏等的高度：document<span class="hljs-selector-class">.documentElement</span><span class="hljs-selector-class">.clientHeight</span>  <br>（以上用得最多）<br>网页可见区域宽： document<span class="hljs-selector-class">.body</span><span class="hljs-selector-class">.clientWidth</span> <br>网页可见区域高： document<span class="hljs-selector-class">.body</span><span class="hljs-selector-class">.clientHeight</span> <br>网页可见区域宽： document<span class="hljs-selector-class">.body</span><span class="hljs-selector-class">.offsetWidth</span> (包括边线的宽) <br>网页可见区域高： document<span class="hljs-selector-class">.body</span><span class="hljs-selector-class">.offsetHeight</span> (包括边线的高) <br>网页正文全文宽： document<span class="hljs-selector-class">.body</span><span class="hljs-selector-class">.scrollWidth</span> <br>网页正文全文高： document<span class="hljs-selector-class">.body</span><span class="hljs-selector-class">.scrollHeight</span> <br>网页被卷去的高： document<span class="hljs-selector-class">.body</span><span class="hljs-selector-class">.scrollTop</span> <br>网页被卷去的左： document<span class="hljs-selector-class">.body</span><span class="hljs-selector-class">.scrollLeft</span> <br>网页正文部分上： window<span class="hljs-selector-class">.screenTop</span> <br>网页正文部分左： window<span class="hljs-selector-class">.screenLeft</span> <br>屏幕分辨率的高： window<span class="hljs-selector-class">.screen</span><span class="hljs-selector-class">.height</span> <br>屏幕分辨率的宽： window<span class="hljs-selector-class">.screen</span><span class="hljs-selector-class">.width</span> <br>屏幕可用工作区高度： window<span class="hljs-selector-class">.screen</span><span class="hljs-selector-class">.availHeight</span> <br>屏幕可用工作区宽度： window<span class="hljs-selector-class">.screen</span>.availWidth<br></code></pre></td></tr></table></figure><h3 id="6-div随着浏览器窗口大小变更，改变大小（resize）："><a href="#6-div随着浏览器窗口大小变更，改变大小（resize）：" class="headerlink" title="6.div随着浏览器窗口大小变更，改变大小（resize）："></a>6.div随着浏览器窗口大小变更，改变大小（resize）：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;resizediv&quot;</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 500px;height: 200px;border: 1px solid black;margin: auto;&quot;</span>&gt;</span>這是一個測試<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- div设置 margin: auto; 可使其居中 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">        $(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">            $(<span class="hljs-built_in">window</span>).resize(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">                <span class="hljs-keyword">var</span> cliWidth = <span class="hljs-built_in">document</span>.documentElement.clientWidth;   <span class="hljs-comment">// 瀏覽器寬</span></span><br><span class="javascript">                <span class="hljs-keyword">var</span> cliHeight = <span class="hljs-built_in">document</span>.documentElement.clientHeight; <span class="hljs-comment">// 瀏覽器高</span></span><br><span class="javascript">                <span class="hljs-built_in">console</span>.log(cliWidth)</span><br><span class="javascript">                <span class="hljs-built_in">console</span>.log(cliHeight)</span><br><span class="javascript">                $(<span class="hljs-string">&#x27;#resizediv&#x27;</span>).css(<span class="hljs-string">&quot;width&quot;</span>, <span class="hljs-string">&quot;500px&quot;</span>);</span><br><span class="javascript">                $(<span class="hljs-string">&#x27;#resizediv&#x27;</span>).css(<span class="hljs-string">&quot;height&quot;</span>, <span class="hljs-string">&quot;200px&quot;</span>);</span><br>            &#125;);<br>        &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br>或者使用CSS<br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br>        #div1 &#123;<br><span class="css">            <span class="hljs-attribute">position</span>: absolute;</span><br><span class="css">            <span class="hljs-attribute">left</span>: <span class="hljs-number">250px</span>;    <span class="hljs-comment">/* left是width里减号后面的一半，才能居中 */</span></span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">100%</span> - <span class="hljs-number">500px</span>);</span><br><span class="css">            <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid black;</span><br><span class="css">            <span class="hljs-attribute">background-color</span>: yellow;</span><br><span class="css">            <span class="hljs-attribute">padding</span>: <span class="hljs-number">5px</span>;</span><br><span class="css">            <span class="hljs-attribute">text-align</span>: center;</span><br>        &#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>创建一个横跨屏幕的div，div 两边有 50px 的间隙：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;div1&quot;</span>&gt;</span>一些文本...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="7-有趣的控制台短语："><a href="#7-有趣的控制台短语：" class="headerlink" title="7.有趣的控制台短语："></a>7.有趣的控制台短语：</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">console<span class="hljs-selector-class">.log</span>(&quot;%c Be <span class="hljs-selector-tag">a</span> great maker!&quot;, &quot;<span class="hljs-attribute">font-size</span>:<span class="hljs-number">50px</span>;<span class="hljs-attribute">color</span>:red;text-fill-<span class="hljs-attribute">color</span>:red;-webkit-text-stroke: <span class="hljs-number">1px</span> black;&quot;)<br></code></pre></td></tr></table></figure><h3 id="8-图片加载失败后，显示自定义的图片，HTML代码："><a href="#8-图片加载失败后，显示自定义的图片，HTML代码：" class="headerlink" title="8.图片加载失败后，显示自定义的图片，HTML代码："></a>8.图片加载失败后，显示自定义的图片，HTML代码：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;error.jpg&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&quot;whenError(this)&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">whenError</span>(<span class="hljs-params">a</span>) </span>&#123;</span><br><span class="javascript">a.onerror = <span class="hljs-literal">null</span>;</span><br><span class="javascript">a.src = <span class="hljs-string">&#x27;http://avatar.csdn.net/1/E/E/1_qq_27080247.jpg&#x27;</span>;</span><br><span class="javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;图片出错的时候调用默认的图片&#x27;</span>);</span><br>&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="9-JS遍历字典："><a href="#9-JS遍历字典：" class="headerlink" title="9.JS遍历字典："></a>9.JS遍历字典：</h3><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">test </span>= &#123;&#x27;a&#x27;: 1,&#x27;b&#x27;: 2,&#x27;c&#x27;:3&#125;;<br>for (var i in test) &#123; <br>    alert(i + &quot;: &quot; + test[i]); <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="10-让页面上的字体不可选择，只需要在style里面添加一个属性：-webkit-user-select-none"><a href="#10-让页面上的字体不可选择，只需要在style里面添加一个属性：-webkit-user-select-none" class="headerlink" title="10.让页面上的字体不可选择，只需要在style里面添加一个属性：-webkit-user-select: none;"></a>10.让页面上的字体不可选择，只需要在style里面添加一个属性：<code>-webkit-user-select: none;</code></h3><h3 id="11-让-lt-textarea-gt-不可拉伸大小，添加style样式：resize-none"><a href="#11-让-lt-textarea-gt-不可拉伸大小，添加style样式：resize-none" class="headerlink" title="11.让&lt;textarea&gt;不可拉伸大小，添加style样式：resize:none;"></a>11.让&lt;textarea&gt;不可拉伸大小，添加style样式：<code>resize:none;</code></h3><h3 id="12-JS函数传递一个对象参数："><a href="#12-JS函数传递一个对象参数：" class="headerlink" title="12.JS函数传递一个对象参数："></a>12.JS函数传递一个对象参数：</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">object</span> = &#123;<span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&quot;text&quot;</span>: <span class="hljs-string">&quot;测试&quot;</span>,<span class="hljs-string">&quot;data&quot;</span>: <span class="hljs-string">&quot;这是一个测试&quot;</span>&#125;<br>return <span class="hljs-string">&quot;&lt;button class=&#x27;btn btn-primary btn-xs&#x27; onclick=&#x27;out_warehouse_sure(&quot;</span> + <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">JSON</span>.</span></span>stringify(<span class="hljs-keyword">object</span>) + <span class="hljs-string">&quot;)&#x27;&gt;出庫&lt;/button&gt;&quot;</span>;<br><span class="hljs-keyword">function</span> out<span class="hljs-constructor">_warehouse_sure(<span class="hljs-params">obj</span>)</span> &#123;<br>    console.log(obj.text)    # 输出：<span class="hljs-string">&quot;测试&quot;</span><br>    .....<br>&#125;<br>说明：先把对象参数转换成JSON字符串，这样传过去的参数直接就是一个对象参数  <br></code></pre></td></tr></table></figure><h3 id="13-JS排序：根据数组中的对象的多个属性值排序，多条件排序："><a href="#13-JS排序：根据数组中的对象的多个属性值排序，多条件排序：" class="headerlink" title="13.JS排序：根据数组中的对象的多个属性值排序，多条件排序："></a>13.JS排序：根据数组中的对象的<strong>多个属性值排序，多条件排序</strong>：</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">&lt;script&gt;<br>    var arr = [<br>        &#123;area:<span class="hljs-string">&#x27;成都&#x27;</span>,<span class="hljs-keyword">location</span>:<span class="hljs-string">&#x27;D23-1.5F&#x27;</span>&#125;,<br>        &#123;area:<span class="hljs-string">&#x27;龍華&#x27;</span>,<span class="hljs-keyword">location</span>:<span class="hljs-string">&#x27;D5-1.5F&#x27;</span>&#125;,<br>        &#123;area:<span class="hljs-string">&#x27;成都&#x27;</span>,<span class="hljs-keyword">location</span>:<span class="hljs-string">&#x27;B25-3F&#x27;</span>&#125;,<br>        &#123;area:<span class="hljs-string">&#x27;成都&#x27;</span>,<span class="hljs-keyword">location</span>:<span class="hljs-string">&#x27;C23-3F&#x27;</span>&#125;,<br>        &#123;area:<span class="hljs-string">&#x27;牧維&#x27;</span>,<span class="hljs-keyword">location</span>:<span class="hljs-string">&#x27;A2-1.5F&#x27;</span>&#125;,<br>        &#123;area:<span class="hljs-string">&#x27;成都&#x27;</span>,<span class="hljs-keyword">location</span>:<span class="hljs-string">&#x27;C23-2F&#x27;</span>&#125;,<br>        &#123;area:<span class="hljs-string">&#x27;觀蘭&#x27;</span>,<span class="hljs-keyword">location</span>:<span class="hljs-string">&#x27;B7-1.5F&#x27;</span>&#125;,<br>        &#123;area:<span class="hljs-string">&#x27;成都&#x27;</span>,<span class="hljs-keyword">location</span>:<span class="hljs-string">&#x27;A25-3F&#x27;</span>&#125;,<br>    ];<br>    var rs = arr.sort( (a, b) =&gt; &#123;    //如果area相同，按照<span class="hljs-keyword">location</span>的降序<br>        <span class="hljs-keyword">if</span> (a.area == b.area) &#123;<br>            <span class="hljs-keyword">return</span> (b.<span class="hljs-keyword">location</span> &gt; a.<span class="hljs-keyword">location</span>) - <span class="hljs-number">0.5</span><br>        &#125;<br>        <span class="hljs-keyword">return</span> (a.area &gt; b.area) - <span class="hljs-number">0.5</span><br>    &#125;)<br>    console.log(rs);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/m0_37885651/article/details/80016718">参考链接</a></p><p><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>博客材料搜集</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></p><h3 id="14-每日格言API及HTML代码："><a href="#14-每日格言API及HTML代码：" class="headerlink" title="14.每日格言API及HTML代码："></a>14.每日格言API及HTML代码：</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs awk">&lt;script&gt;<br>    $(<span class="hljs-keyword">function</span> () &#123;<br>        <span class="hljs-regexp">//</span> var pattern = GeoPattern.generate(<span class="hljs-string">&#x27;hui-zz&#x27;</span> + Math.random()).color;<br>        <span class="hljs-regexp">//</span> $(<span class="hljs-string">&#x27;#particles-js&#x27;</span>).css(<span class="hljs-string">&#x27;background&#x27;</span>, pattern);<br>        <span class="hljs-regexp">//</span> $(<span class="hljs-string">&#x27;#particles-js&#x27;</span>).css(<span class="hljs-string">&#x27;background-image&#x27;</span>,<span class="hljs-string">&#x27;url(https://api.isoyu.com/bing_images.php)&#x27;</span>);<br>        document.getElementById(<span class="hljs-string">&#x27;particles-js&#x27;</span>).style.cssText = <span class="hljs-string">&quot;background-image:url(https://api.isoyu.com/bing_images.php);&quot;</span>;<br>        $.getJSON(<span class="hljs-string">&quot;https://api.ooopn.com/ciba/api.php&quot;</span>,<br>            <span class="hljs-keyword">function</span> (data) &#123;<br>                $(<span class="hljs-string">&quot;.user-details h1&quot;</span>).text(data[<span class="hljs-string">&quot;ciba&quot;</span>]);<br>                $(<span class="hljs-string">&quot;.user-details p&quot;</span>).text(data[<span class="hljs-string">&quot;ciba-en&quot;</span>]);<br>            &#125;);<br>    &#125;);<br>&lt;/script&gt;  <br>[参考链接](https:<span class="hljs-regexp">//</span>hui-zz.github.io/RunAny)<br></code></pre></td></tr></table></figure><h3 id="15-博客看板动画人物："><a href="#15-博客看板动画人物：" class="headerlink" title="15.博客看板动画人物："></a>15.博客看板动画人物：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs xml">动漫人物<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;live2d-widget&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;live2dcanvas&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;NaN&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;400&quot;</span> </span><br><span class="hljs-tag">        <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: fixed; width: 20%; opacity: 0.7; right: -20px; bottom: -20px; z-index: 99999; pointer-events: none;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://eqcn.ajz.miesnfu.com/wp-content/plugins/wp-3d-pony/live2dw/lib/L2Dwidget.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br>    L2Dwidget.init(&#123;<br><span class="javascript">        <span class="hljs-string">&quot;model&quot;</span>: &#123;</span><br><span class="javascript">            <span class="hljs-comment">//jsonpath控制显示那个模型</span></span><br><span class="javascript">            jsonPath: <span class="hljs-string">&quot;https://unpkg.com/live2d-widget-model-shizuku@1.0.5/assets/shizuku.model.json&quot;</span>,</span><br><span class="javascript">            <span class="hljs-string">&quot;scale&quot;</span>: <span class="hljs-number">1</span></span><br>        &#125;,<br><span class="javascript">        <span class="hljs-string">&quot;display&quot;</span>: &#123;</span><br><span class="javascript">            <span class="hljs-string">&quot;position&quot;</span>: <span class="hljs-string">&quot;right&quot;</span>, <span class="hljs-comment">//看板娘的表现位置</span></span><br><span class="javascript">            <span class="hljs-string">&quot;width&quot;</span>: <span class="hljs-string">&quot;20%&quot;</span>,  <span class="hljs-comment">//宽度</span></span><br><span class="javascript">            <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-number">200</span>, <span class="hljs-comment">//高度</span></span><br><span class="javascript">            <span class="hljs-string">&quot;hOffset&quot;</span>: -<span class="hljs-number">20</span>,</span><br><span class="javascript">            <span class="hljs-string">&quot;vOffset&quot;</span>: -<span class="hljs-number">20</span></span><br>        &#125;,<br><span class="javascript">        <span class="hljs-string">&quot;mobile&quot;</span>: &#123;</span><br><span class="javascript">            <span class="hljs-string">&quot;show&quot;</span>: <span class="hljs-literal">true</span>,</span><br><span class="javascript">            <span class="hljs-string">&quot;scale&quot;</span>: <span class="hljs-number">0.5</span></span><br>        &#125;,<br><span class="javascript">        <span class="hljs-string">&quot;react&quot;</span>: &#123;</span><br><span class="javascript">            <span class="hljs-string">&quot;opacityDefault&quot;</span>: <span class="hljs-number">0.7</span>,</span><br><span class="javascript">            <span class="hljs-string">&quot;opacityOnHover&quot;</span>: <span class="hljs-number">0.2</span></span><br>        &#125;<br>    &#125;);<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br>宠物猫  <br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;live2d-widget&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;live2dcanvas&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;NaN&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;400&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: fixed; width: 20%; opacity: 0.7; right: -20px; bottom: -20px; z-index: 99999; pointer-events: none;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://eqcn.ajz.miesnfu.com/wp-content/plugins/wp-3d-pony/live2dw/lib/L2Dwidget.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br>    L2Dwidget.init(&#123;<br><span class="javascript">        <span class="hljs-string">&quot;model&quot;</span>: &#123;</span><br><span class="javascript">            <span class="hljs-comment">//jsonpath控制显示那个模型</span></span><br><span class="javascript">            jsonPath: <span class="hljs-string">&quot;https://unpkg.com/live2d-widget-model-tororo@1.0.5/assets/tororo.model.json&quot;</span>,</span><br><span class="javascript">            <span class="hljs-string">&quot;scale&quot;</span>: <span class="hljs-number">1</span></span><br>        &#125;,<br><span class="javascript">        <span class="hljs-string">&quot;display&quot;</span>: &#123;</span><br><span class="javascript">            <span class="hljs-string">&quot;position&quot;</span>: <span class="hljs-string">&quot;right&quot;</span>, <span class="hljs-comment">//看板娘的表现位置</span></span><br><span class="javascript">            <span class="hljs-string">&quot;width&quot;</span>: <span class="hljs-string">&quot;20%&quot;</span>,  <span class="hljs-comment">//宽度</span></span><br><span class="javascript">            <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-number">200</span>, <span class="hljs-comment">//高度</span></span><br><span class="javascript">            <span class="hljs-string">&quot;hOffset&quot;</span>: -<span class="hljs-number">20</span>,</span><br><span class="javascript">            <span class="hljs-string">&quot;vOffset&quot;</span>: -<span class="hljs-number">20</span></span><br>        &#125;,<br><span class="javascript">        <span class="hljs-string">&quot;mobile&quot;</span>: &#123;</span><br><span class="javascript">            <span class="hljs-string">&quot;show&quot;</span>: <span class="hljs-literal">true</span>,</span><br><span class="javascript">            <span class="hljs-string">&quot;scale&quot;</span>: <span class="hljs-number">0.5</span></span><br>        &#125;,<br><span class="javascript">        <span class="hljs-string">&quot;react&quot;</span>: &#123;</span><br><span class="javascript">            <span class="hljs-string">&quot;opacityDefault&quot;</span>: <span class="hljs-number">0.7</span>,</span><br><span class="javascript">            <span class="hljs-string">&quot;opacityOnHover&quot;</span>: <span class="hljs-number">0.2</span></span><br>        &#125;<br>    &#125;);<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="16-表格内容自动滚动"><a href="#16-表格内容自动滚动" class="headerlink" title="16.表格内容自动滚动"></a>16.表格内容自动滚动</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//javascript原生自动滚动</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">startmarquee</span>(<span class="hljs-params">lh, speed, delay, marqueeObj</span>) </span>&#123;  <span class="hljs-comment">//lh---每行列表的高度，speed---滚动的速度，delay---间隔多久滚动一次,marqueeObj---需要实现这个效果的id</span><br>    <span class="hljs-keyword">var</span> p = <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">var</span> t;<br>    <span class="hljs-keyword">var</span> o = <span class="hljs-built_in">document</span>.getElementById(marqueeObj);<br>    o.innerHTML += o.innerHTML;<br>    o.style.marginTop = <span class="hljs-number">0</span>;<br>    o.onmouseover = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123; p = <span class="hljs-literal">true</span>; &#125; <span class="hljs-comment">//鼠标移入，停止滚动</span><br>    o.onmouseout = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123; p = <span class="hljs-literal">false</span>; &#125;<span class="hljs-comment">//鼠标移出，继续滚动</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">start</span>(<span class="hljs-params"></span>) </span>&#123;<br>        t = <span class="hljs-built_in">setInterval</span>(scrolling, speed); <span class="hljs-comment">//定时器，自动滚动</span><br>        <span class="hljs-keyword">if</span> (!p) o.style.marginTop = <span class="hljs-built_in">parseInt</span>(o.style.marginTop) - <span class="hljs-number">1</span> + <span class="hljs-string">&quot;px&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scrolling</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">parseInt</span>(o.style.marginTop) % lh != <span class="hljs-number">0</span>) &#123;<br>            o.style.marginTop = <span class="hljs-built_in">parseInt</span>(o.style.marginTop) - <span class="hljs-number">1</span> + <span class="hljs-string">&quot;px&quot;</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">Math</span>.abs(<span class="hljs-built_in">parseInt</span>(o.style.marginTop)) &gt;= o.scrollHeight / <span class="hljs-number">2</span>) o.style.marginTop = <span class="hljs-number">0</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-built_in">clearInterval</span>(t);<br>            <span class="hljs-built_in">setTimeout</span>(start, delay);<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">setTimeout</span>(start, delay);<br>&#125;<br>startmarquee(<span class="hljs-number">48</span>, <span class="hljs-number">35</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&quot;goods-info&quot;</span>); <span class="hljs-comment">//引用函数</span><br></code></pre></td></tr></table></figure><h3 id="17-JS深拷贝"><a href="#17-JS深拷贝" class="headerlink" title="17.JS深拷贝"></a>17.JS深拷贝</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">let</span> obj<span class="hljs-number">1</span> = &#123;a: <span class="hljs-number">1</span>, b: <span class="hljs-number">2</span>, c: <span class="hljs-number">3</span>&#125;<br><span class="hljs-attribute">let</span> objString = JSON.stringify(obj<span class="hljs-number">1</span>)<br><span class="hljs-attribute">let</span> obj<span class="hljs-number">2</span> = JSON.parse(objString)<br><span class="hljs-attribute">obj2</span>.a = <span class="hljs-number">5</span>;<br><span class="hljs-attribute">console</span>.log(obj<span class="hljs-number">1</span>.a);  // <span class="hljs-number">1</span><br><span class="hljs-attribute">console</span>.log(obj<span class="hljs-number">2</span>.a); // <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><h3 id="18-JS对数组中的对象去重"><a href="#18-JS对数组中的对象去重" class="headerlink" title="18.JS对数组中的对象去重"></a>18.JS对数组中的对象去重</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs JS"><span class="hljs-keyword">var</span> arr = [&#123;<br>  key: <span class="hljs-string">&#x27;01&#x27;</span>,<br>  value: <span class="hljs-string">&#x27;乐乐&#x27;</span><br>&#125;, &#123;<br>  key: <span class="hljs-string">&#x27;02&#x27;</span>,<br>  value: <span class="hljs-string">&#x27;博博&#x27;</span><br>&#125;, &#123;<br>  key: <span class="hljs-string">&#x27;03&#x27;</span>,<br>  value: <span class="hljs-string">&#x27;淘淘&#x27;</span><br>&#125;, &#123;<br>  key: <span class="hljs-string">&#x27;04&#x27;</span>,<br>  value: <span class="hljs-string">&#x27;哈哈&#x27;</span><br>&#125;, &#123;<br>  key: <span class="hljs-string">&#x27;01&#x27;</span>,<br>  value: <span class="hljs-string">&#x27;乐乐&#x27;</span><br>&#125;];<br><span class="hljs-comment">// 方法1：利用对象访问属性的方法，判断对象中是否存在key</span><br><span class="hljs-keyword">var</span> result = [];<br><span class="hljs-keyword">var</span> obj = &#123;&#125;;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;<br>  <span class="hljs-keyword">if</span> (!obj[arr[i].key]) &#123;<br>    result.push(arr[i]);<br>    obj[arr[i].key] = <span class="hljs-literal">true</span>;<br>  &#125;<br>&#125;<br><span class="hljs-built_in">console</span>.log(result); <span class="hljs-comment">// [&#123;key: &quot;01&quot;, value: &quot;乐乐&quot;&#125;,&#123;key: &quot;02&quot;, value: &quot;博博&quot;&#125;,&#123;key: &quot;03&quot;, value: &quot;淘淘&quot;&#125;,&#123;key: &quot;04&quot;, value: &quot;哈哈&quot;&#125;]</span><br><span class="hljs-comment">// 方法2：利用reduce方法遍历数组,reduce第一个参数是遍历需要执行的函数，第二个参数是item的初始值</span><br><span class="hljs-keyword">var</span> obj = &#123;&#125;;<br>arr = arr.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item, next</span>) </span>&#123;<br>  obj[next.key] ? <span class="hljs-string">&#x27;&#x27;</span> : obj[next.key] = <span class="hljs-literal">true</span> &amp;&amp; item.push(next);<br>  <span class="hljs-keyword">return</span> item;<br>&#125;, []);<br><span class="hljs-built_in">console</span>.log(arr); <span class="hljs-comment">// [&#123;key: &quot;01&quot;, value: &quot;乐乐&quot;&#125;,&#123;key: &quot;02&quot;, value: &quot;博博&quot;&#125;,&#123;key: &quot;03&quot;, value: &quot;淘淘&quot;&#125;,&#123;key: &quot;04&quot;, value: &quot;哈哈&quot;&#125;]</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JS相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JS插件</tag>
      
      <tag>JS问题集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mysql数据库中查询重复数据和去重数据 , 删除重复数据的sql及分析</title>
    <link href="/2021/04/15/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E6%9F%A5%E8%AF%A2%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE%E5%92%8C%E5%8E%BB%E9%87%8D%E6%95%B0%E6%8D%AE%20,%20%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE%E7%9A%84sql%E5%8F%8A%E5%88%86%E6%9E%90/"/>
    <url>/2021/04/15/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E6%9F%A5%E8%AF%A2%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE%E5%92%8C%E5%8E%BB%E9%87%8D%E6%95%B0%E6%8D%AE%20,%20%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE%E7%9A%84sql%E5%8F%8A%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="Mysql数据库中查询重复数据和去重数据-删除重复数据的sql及分析"><a href="#Mysql数据库中查询重复数据和去重数据-删除重复数据的sql及分析" class="headerlink" title="Mysql数据库中查询重复数据和去重数据 , 删除重复数据的sql及分析"></a>Mysql数据库中查询重复数据和去重数据 , 删除重复数据的sql及分析</h1><p>数据库中有重复数据时,用到哪些sql语句?<br>建表:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `<span class="hljs-keyword">user</span>` (<br>  `id` <span class="hljs-type">bigint</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT,<br>  `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">COLLATE</span> utf8mb4_general_ci <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;名称&#x27;</span>,<br>  `age` <span class="hljs-type">int</span>(<span class="hljs-number">2</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">5</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb4 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8mb4_general_ci;  <br></code></pre></td></tr></table></figure><p>这里有若干数据,并掺杂了重复数据    </p><p><img src="/img/content_images/20210126203525801_16648.png">  </p><h2 id="1-查看过滤重复后的数据"><a href="#1-查看过滤重复后的数据" class="headerlink" title="1. 查看过滤重复后的数据"></a>1. 查看过滤重复后的数据</h2><p>思路, group by 分组可以对多个列进行分组, 分组后可以过滤掉重复的数据<br><strong>这里在mysql5.7以上版本会报错,因为不支持select那些group by和聚合函数之外的字段</strong><br>sql语句:</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">SELECT</span> id,<span class="hljs-symbol">`name`</span>,age,<span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>)<br><span class="hljs-keyword">FROM</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-symbol">`name`</span>,age<br></code></pre></td></tr></table></figure><p><img src="/img/content_images/20210126203705165_24069.png"><br>这里要么把id去掉,要么选择临时方案:</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">set</span> @@<span class="hljs-keyword">global</span>.sql_mode =<span class="hljs-string">&#x27;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&#x27;</span>;<br><span class="hljs-keyword">set</span> @@<span class="hljs-keyword">SESSION</span>.sql_mode =<span class="hljs-string">&#x27;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&#x27;</span>;<br><br><span class="hljs-keyword">SELECT</span> id,`<span class="hljs-type">name</span>`,age,count(<span class="hljs-number">1</span>)<br><span class="hljs-keyword">FROM</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> `<span class="hljs-type">name</span>`,age;<br></code></pre></td></tr></table></figure><h2 id="2-查看重复的数据"><a href="#2-查看重复的数据" class="headerlink" title="2. 查看重复的数据"></a>2. 查看重复的数据</h2><p>刚刚的语句已经把每个组对应的count数查询出来了,那么count&gt;1的自然是重复的数据</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">SELECT</span> id,<span class="hljs-symbol">`name`</span>,age,<span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">as</span> c<br><span class="hljs-keyword">FROM</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-symbol">`name`</span>,age <span class="hljs-keyword">having</span> c &gt; <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><img src="/img/content_images/20210126203821586_17796.png"></p><h2 id="3-删除重复的数据留下一条"><a href="#3-删除重复的数据留下一条" class="headerlink" title="3. 删除重复的数据留下一条"></a>3. 删除重复的数据留下一条</h2><p>思路: 刚刚已经把重复的数据查询出来了,包括id, 那么查询出每个重复组中的唯一一个id,也就是x,就可以delete … id not in (x)</p><p><strong>上面说虽然5.7以上版本默认不支持查询group by 以外的字段,比如id,但是聚合函数还是可以的</strong><br>子语句1:</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">SELECT</span> MIN(id) <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">user</span><br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-type">name</span>,age <br></code></pre></td></tr></table></figure><p>查询出来的id就是我们需要留下的不重复的数据的id<br><img src="/img/content_images/20210126203930065_11859.png"><br>按理来说只要:<br>delete from user where id not in 子语句1</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">user</span><br><span class="hljs-keyword">WHERE</span> id <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<br><span class="hljs-keyword">SELECT</span> MIN(id) <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">user</span><br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-type">name</span>,age <br>)<br></code></pre></td></tr></table></figure><p><strong style="color: red;">但是报错了</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">user</span><br><span class="hljs-keyword">WHERE</span> id <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<br><span class="hljs-keyword">SELECT</span> MIN(id) <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">user</span><br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-type">name</span>,age <br>)<br>&gt; <span class="hljs-number">1093</span> - You can<span class="hljs-string">&#x27;t specify target table &#x27;</span><span class="hljs-keyword">user</span><span class="hljs-string">&#x27; for update in FROM clause</span><br><span class="hljs-string">&gt; 时间: 0.007s</span><br></code></pre></td></tr></table></figure><p><strong style="color: red;">因为在mysql中,不能在一条Sql语句中,即查询这些数据,同时修改这些数据</strong></p><p><strong>解决方法：select的结果再通过一个中间表temp进行select多一次，就可以避免这个错误</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">user</span><br><span class="hljs-keyword">WHERE</span> id <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">temp</span>.min_id <span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> MIN(id) min_id <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">user</span><br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-type">name</span>,age<br>)<span class="hljs-keyword">AS</span> <span class="hljs-keyword">temp</span><br>);<br><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span>;<br></code></pre></td></tr></table></figure><p>删除成功:    </p><p><img src="/img/content_images/20210126204102329_17906.png"></p>]]></content>
    
    
    <categories>
      
      <category>Mysql常用操作</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据去重</tag>
      
      <tag>数据查询</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL笔记</title>
    <link href="/2021/04/15/MySQL%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/04/15/MySQL%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><h3 id="1-两个日期字段相差的天数计算"><a href="#1-两个日期字段相差的天数计算" class="headerlink" title="1.两个日期字段相差的天数计算"></a>1.两个日期字段相差的天数计算</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">UPDATE</span> 表名 <span class="hljs-keyword">SET</span> 天数差字段=DATEDIFF(日期字段<span class="hljs-number">2</span>, 日期字段<span class="hljs-number">1</span>) <span class="hljs-keyword">WHERE</span> 条件<br></code></pre></td></tr></table></figure><h3 id="2-提取字符串中的数字"><a href="#2-提取字符串中的数字" class="headerlink" title="2.提取字符串中的数字"></a>2.提取字符串中的数字</h3><p>如：<code>timeSchedule = &#123;&#39;送單&#39;: 5, &#39;詢價中&#39;: 0, &#39;PO下單中&#39;: 49&#125;</code>  </p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas"><span class="hljs-meta">UPDATE</span> 表名 <span class="hljs-meta">SET</span> 数字相加的和= substring<span class="hljs-meta">_index(</span>substring<span class="hljs-meta">_index(</span>timeSchedule, <span class="hljs-string">&quot;&#x27;送單&#x27;:&quot;</span>, -1), <span class="hljs-string">&#x27;,&#x27;</span>, 1) + substring<span class="hljs-meta">_index(</span>substring<span class="hljs-meta">_index(</span>timeSchedule, <span class="hljs-string">&quot;&#x27;詢價中&#x27;:&quot;</span>, -1), <span class="hljs-string">&#x27;,&#x27;</span>, 1) + substring<span class="hljs-meta">_index(</span>substring<span class="hljs-meta">_index(</span>timeSchedule, <span class="hljs-string">&quot;&#x27;PO下單中&#x27;:&quot;</span>, -1), <span class="hljs-string">&#x27;&#125;&#x27;</span>, 1)<br></code></pre></td></tr></table></figure><h3 id="3-查询年月日时分相同的数据的个数"><a href="#3-查询年月日时分相同的数据的个数" class="headerlink" title="3.查询年月日时分相同的数据的个数"></a>3.查询年月日时分相同的数据的个数</h3><blockquote><p>数据库中的年月日时分秒这样表示：’%Y-%m-%d %H:%i:%s’</p></blockquote><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">SELECT</span> s_time, <span class="hljs-built_in">COUNT</span>(*) <span class="hljs-keyword">FROM</span> ansysms_currentinfo <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> date_format(s_time,<span class="hljs-string">&#x27;%Y-%m-%d %H:%i&#x27;</span>)<br></code></pre></td></tr></table></figure><p><strong>注</strong>：在GROUP BY子句之后，在ORDER BY子句之前添加 <code>HAVING COUNT(*) &gt; 1</code> 可只查看重复的数据的个数      </p><p>查询结果展示（数值为2的就是重复的数据）：  </p><p><img src="/img/content_images/20210126194907567_29647.png" alt="查询结果展示"></p><h3 id="4-删除年月日时分相同的数据，只保留一笔数据"><a href="#4-删除年月日时分相同的数据，只保留一笔数据" class="headerlink" title="4.删除年月日时分相同的数据，只保留一笔数据"></a>4.删除年月日时分相同的数据，只保留一笔数据</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> ansysms_currentinfo <span class="hljs-keyword">WHERE</span> id <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">temp</span>.min_id <span class="hljs-keyword">FROM</span> (<span class="hljs-keyword">SELECT</span> MIN(id) min_id <span class="hljs-keyword">FROM</span> ansysms_currentinfo <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> date_format(s_time, <span class="hljs-string">&#x27;%Y-%m-%d %H:%i&#x27;</span>)) <span class="hljs-keyword">AS</span> <span class="hljs-keyword">temp</span><br>);<br><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> ansysms_currentinfo;<br>```  <br>参考链接：[Mysql数据库中查询重复数据和去重数据 , 删除重复数据的<span class="hljs-keyword">sql</span>及分析](https://blog.csdn.net/zzzgd_666/article/details/<span class="hljs-number">80718139</span>)<br><br>### <span class="hljs-number">5.</span>去重查询（年月日时分有重复的数据）  <br></code></pre></td></tr></table></figure><p>SELECT distinct date_format(s_time,’%Y-%m-%d %H:%i’) from ansysms_currentinfo</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">```<br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span>(字段名) <span class="hljs-keyword">from</span> 表名<br></code></pre></td></tr></table></figure><h3 id="6-嵌套查询"><a href="#6-嵌套查询" class="headerlink" title="6.嵌套查询"></a>6.嵌套查询</h3><p>将第一次<code>select</code>查询出来的结果给到下一次查询的条件</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">SELECT</span><br>IP_Address,<br>Caption <br><span class="hljs-keyword">FROM</span><br>NodesData <br><span class="hljs-keyword">WHERE</span><br>NodeID <span class="hljs-keyword">IN</span> ( <span class="hljs-keyword">SELECT</span> TopologyConnections.MappedNodeID <span class="hljs-keyword">FROM</span> TopologyConnections <span class="hljs-keyword">WHERE</span> SourceNodeID = <span class="hljs-number">231</span> )<br></code></pre></td></tr></table></figure><h3 id="7-查询字段中包含某些字符串"><a href="#7-查询字段中包含某些字符串" class="headerlink" title="7.查询字段中包含某些字符串"></a>7.查询字段中包含某些字符串</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 字段名 <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%包含的字符串%&#x27;</span><br><br>注意：上面的<span class="hljs-symbol">`百分号`</span>两边一定要是<span class="hljs-symbol">`单引号`</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Mysql常用操作</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据去重</tag>
      
      <tag>数据查询</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/04/15/hello-world/"/>
    <url>/2021/04/15/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>test</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
